#!/bin/bash

trap 'kill -TERM $PID' TERM INT

# wait for jira lock file to disappear
if [ "$CHECK_LOCK_FILE" = true ]
then
  while [ -f ${JIRA_HOME}/.jira-home.lock ]
  do
    sleep 1
    echo "${JIRA_HOME}/.jira-home.lock is present ..."
    echo waiting for other node to terminate
  done
else
  # If the instance crash unexpectly it is needed removing the lock file in a non-cluster env
  rm -f ${JIRA_HOME}/.jira-home.lock
fi

# update server.xml
cat conf/server.xml.orig > conf/server.xml

if [ ${CATALINA_CONNECTOR_PROXYNAME} ]
then
  #xmlstarlet ed --insert Server/Service/Connector[@port=8080] --type attr -n proxyName -v ${CATALINA_CONNECTOR_PROXYNAME:-} conf/server.xml > conf/server.xml
  xmlstarlet ed --inplace --insert Server/Service/Connector[@port=8080] --type attr -n proxyName -v ${CATALINA_CONNECTOR_PROXYNAME:-} conf/server.xml
fi

if [ ${CATALINA_CONNECTOR_PROXYPORT} ]
then
  #xmlstarlet ed   --insert Server/Service/Connector[@port=8080] --type attr -n proxyPort -v ${CATALINA_CONNECTOR_PROXYPORT:-} conf/server.xml > conf/server.xml
  xmlstarlet ed --inplace --insert Server/Service/Connector[@port=8080] --type attr -n proxyPort -v ${CATALINA_CONNECTOR_PROXYPORT:-} conf/server.xml
fi

if [ ${CATALINA_CONNECTOR_SCHEME} ]
then
  #xmlstarlet ed   --insert Server/Service/Connector[@port=8080] --type attr -n scheme -v ${CATALINA_CONNECTOR_SCHEME:-} conf/server.xml > conf/server.xml
  xmlstarlet ed --inplace --insert Server/Service/Connector[@port=8080] --type attr -n scheme -v ${CATALINA_CONNECTOR_SCHEME:-} conf/server.xml
fi



JAVA_HOME=/opt/java/openjdk/
export JAVA_HOME
./bin/catalina.sh run &
PID=$!
wait $PID
trap - TERM INT
wait $PID
EXIT_STATUS=$?
